// <auto-generated />
using CryptoWallet.WalletAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CryptoWallet.WalletAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("CryptoWallet.WalletAPI.Models.TransactionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Coin")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Count")
                        .HasColumnType("decimal(18,12)");

                    b.Property<int>("RecipientId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SenderId")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("History");
                });

            modelBuilder.Entity("CryptoWallet.WalletAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CryptoWallet.WalletAPI.Models.UserBalance", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Coin")
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Count")
                        .HasColumnType("decimal(18,12)");

                    b.HasKey("Id", "UserId", "Coin");

                    b.HasIndex("UserId");

                    b.ToTable("UserBalances");
                });

            modelBuilder.Entity("CryptoWallet.WalletAPI.Models.UserBalance", b =>
                {
                    b.HasOne("CryptoWallet.WalletAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
